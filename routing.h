#ifndef _ROUTING_H
#define	_ROUTING_H

//Πόσους τυχαίους αριθμούς θα δημιουργήσει ο πατέρας
#define  RandomSize       10000

//Πόσοι θα είναι οι κύλινδροι του δίσκου
#define  MaxBlockRange    2000

/* Οι παρακάτω δύο μεταβλητές βοηθούν ώστε να δημιουργείτε ένας σωρός
 * από αιτήσεις κατά την εκτέλεση. Η πρώτη μεταβλητή αφορά το πόσες
 * τιμές θα στέλνουμε κάθε φορά στο δίσκο, ενώ η δεύτερη δηλώνει ανά 
 * πόσες αιτήσεις οι οποίες "stackαρουν" θα μειώνετε ο αριθμός των 
 * αιτήσεων που θα στέλνουμε. Δείτε επιπλέον και την συνάρτηση defineCount */

#define  ReadRandomRate   10
#define  StackSize        50

#define Error -1

#define ON     1
#define OFF    0

#define TRUE   1
#define FALSE  0

#define  UP    0
#define  DOWN  1

struct Applications {
    //Αποτελεί το διάνυσμα στο οποίο θα αποθηκεύονται οι αιτήσεις
    int *Queue;

    //Αποτελεί το διάνυσμα στο οποίο θα αποθηκεύεται ποια χρονική στιγμή δημιουργήθηκε η αίτηση.
    int *rndLoop;

    //Δηλώνει των αριθμό των αιτήσεων που εκκρεμούν
    unsigned int QueueSize;

    //Δηλώνει το μέγεθος του διανύσματος.
    unsigned int QueueCapacity;

    //Υποδυκνύει το άθροισμα
    unsigned int sum;

    //Υποδυκνύει την τωρινή θέση της κεφαλής
    unsigned int CurrentApp;

    //Υποδυκνύει τη τωρινή θέση που βρίσκεται η κεφαλή ποια χρονική στιγμή δημιουργήθηκε
    unsigned int CurrentRND;

    //Δηλώνει την κατεύθυνση της κεφαλής
    short int direction;
} App;

/* Εκτελείται ότι έχει σχέση με τα παιδιά (Αλγόριθμους) */
int childs();

/* Δημιουργεί τυχαίους αριθμούς και τους αποθηκεύει σε
 * ένα αρχείο με όνομα random.txt */
int father();

/* Συναρτήσεις που αφορούν τους αλγόριθμους */
int FCFS();
int SSTF();
int SCAN();
int C_SCAN();
int LOOK();
int C_LOOK();

/* Συναρτήσεις που αφορούν το χειρισμό των αιτήσεων */

/* Προσθέτει μία αίτηση στο διάνυσμα μας */
int add_app();

/* Αφαιρεί μία αίτηση από το διάνυσμα */
int remove_app();

/* Είτε δεσμεύει κάποιο χώρο στην μνήμη για το διάνυσμα
 * είτε αυξάνει την χωρητικότητα του διανύσματος.
 * Επιστρέφει τιμή exit -1 εάν δεν καταφέρει να δεσμεύσει κάποιο χώρο*/
int new_capacity();

/* Μετακινεί την κεφαλή του δίσκου προς τα πάνω ή προς τα κάτω αντίστοιχα. Επιστρέφουν τιμή FALSE σε περίπτωση που δεν υπάρχει τιμή προς την κατεύθυνση τους */
int move_up();
int move_down();

/* Μετακινεί την κεφαλή του δίσκου στην μικρότερη και στην μεγαλύτερη θέση αντίστοιχα. Επιστρέφουν τιμή FALSE σε περίπτωση που δεν υπάρχει τιμή προς την κατεύθυνση τους */
int min_app();
int max_app();

/* Προσδιορίζει πόσους τυχαίους αριθμούς θα προσθέτει στο διάνυσμα μας κάθε φορά. */
int defineCount();

#ifdef	__cplusplus
}
#endif

#endif	/* _ROUTING_H */